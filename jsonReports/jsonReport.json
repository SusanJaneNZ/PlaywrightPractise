{
  "config": {
    "configFile": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\playwright.config.ts",
    "rootDir": "C:/Users/susan/playwright/PlaywrightPractise/tests/lambda",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "open": "never",
          "outputFolder": "htmlReports",
          "assets": false,
          "fullPageScreenshots": true,
          "preserveScreenshots": true,
          "reportTitle": "My Test Report",
          "reportName": "My Test Report"
        }
      ],
      [
        "json",
        {
          "outputFile": "jsonReports/jsonReport.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/Users/susan/playwright/PlaywrightPractise/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chrome:latest:MacOS Ventura@lambdatest",
        "name": "chrome:latest:MacOS Ventura@lambdatest",
        "testDir": "C:/Users/susan/playwright/PlaywrightPractise/tests/lambda",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "C:/Users/susan/playwright/PlaywrightPractise/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chrome:latest:Windows 11@lambdatest",
        "name": "chrome:latest:Windows 11@lambdatest",
        "testDir": "C:/Users/susan/playwright/PlaywrightPractise/tests/lambda",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "C:/Users/susan/playwright/PlaywrightPractise/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "C:/Users/susan/playwright/PlaywrightPractise/tests/lambda",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.51.1",
    "workers": 8,
    "webServer": null
  },
  "suites": [
    {
      "title": "tabs.test.ts",
      "file": "tabs.test.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Two Popups",
          "ok": false,
          "tags": [
            "lambdatest"
          ],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome:latest:Windows 11@lambdatest",
              "projectName": "chrome:latest:Windows 11@lambdatest",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 15531,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\u001b[22m\n\n    at C:\\Users\\susan\\playwright\\PlaywrightPractise\\tests\\lambda\\tabs.test.ts:75:114",
                    "matcherResult": {
                      "message": "\u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\u001b[22m\n",
                      "pass": false,
                      "actual": "<element(s) not found>",
                      "name": "toBeVisible",
                      "expected": "visible",
                      "log": [
                        "  - expect.toBeVisible with timeout 5000ms",
                        "  - waiting for locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })"
                      ],
                      "timeout": 5000
                    },
                    "location": {
                      "file": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\tests\\lambda\\tabs.test.ts",
                      "column": 114,
                      "line": 75
                    },
                    "snippet": "\u001b[0m \u001b[90m 73 |\u001b[39m\n \u001b[90m 74 |\u001b[39m     \u001b[90m//this selects the form element provided it has a child (or children) with the text\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 75 |\u001b[39m     \u001b[36mawait\u001b[39m expect(facebookPopup\u001b[33m.\u001b[39mlocator(\u001b[32m'#login_popup_cta_form'\u001b[39m)\u001b[33m.\u001b[39mfilter({ hasText\u001b[33m:\u001b[39m \u001b[35m/See more from LambdaTest/\u001b[39m }))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 76 |\u001b[39m     \u001b[90m//this one is the same but is more performant as no post selection filtering\u001b[39m\n \u001b[90m 77 |\u001b[39m     \u001b[36mawait\u001b[39m expect(facebookPopup\u001b[33m.\u001b[39mlocator(\u001b[32m'#login_popup_cta_form'\u001b[39m\u001b[33m,\u001b[39m { hasText\u001b[33m:\u001b[39m \u001b[35m/See more from LambdaTest/\u001b[39m }))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m     \u001b[90m//one below matches two elements, as its selecting the actual text element which exists twice.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\tests\\lambda\\tabs.test.ts",
                        "column": 114,
                        "line": 75
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('#login_popup_cta_form').filter({ hasText: /See more from LambdaTest/ })\u001b[22m\n\n\n\u001b[0m \u001b[90m 73 |\u001b[39m\n \u001b[90m 74 |\u001b[39m     \u001b[90m//this selects the form element provided it has a child (or children) with the text\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 75 |\u001b[39m     \u001b[36mawait\u001b[39m expect(facebookPopup\u001b[33m.\u001b[39mlocator(\u001b[32m'#login_popup_cta_form'\u001b[39m)\u001b[33m.\u001b[39mfilter({ hasText\u001b[33m:\u001b[39m \u001b[35m/See more from LambdaTest/\u001b[39m }))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 76 |\u001b[39m     \u001b[90m//this one is the same but is more performant as no post selection filtering\u001b[39m\n \u001b[90m 77 |\u001b[39m     \u001b[36mawait\u001b[39m expect(facebookPopup\u001b[33m.\u001b[39mlocator(\u001b[32m'#login_popup_cta_form'\u001b[39m\u001b[33m,\u001b[39m { hasText\u001b[33m:\u001b[39m \u001b[35m/See more from LambdaTest/\u001b[39m }))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m     \u001b[90m//one below matches two elements, as its selecting the actual text element which exists twice.\u001b[39m\u001b[0m\n\u001b[2m    at C:\\Users\\susan\\playwright\\PlaywrightPractise\\tests\\lambda\\tabs.test.ts:75:114\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "Username Info:  susan.sturmanz\n"
                    },
                    {
                      "text": "Access Key Info:  LT_FTFESZQRpdbpwSlCj1GOG6yLgNJXDNBWzNMtxwRQmzP1Taw\n"
                    },
                    {
                      "text": "Popup Title: Log into Facebook\n"
                    },
                    {
                      "text": "New Window URL: https://www.lambdatest.com/selenium-playground/window-popup-modal-demo\n"
                    },
                    {
                      "text": "New Window URL: https://x.com/intent/follow?screen_name=Lambdatesting\n"
                    },
                    {
                      "text": "New Window URL: https://www.facebook.com/login/?next=https%3A%2F%2Fwww.facebook.com%2Flambdatest%2F\n"
                    },
                    {
                      "text": "Facebook URL: https://www.facebook.com/login/?next=https%3A%2F%2Fwww.facebook.com%2Flambdatest%2F\n"
                    },
                    {
                      "text": "Twitter URL: https://x.com/intent/follow?screen_name=Lambdatesting\n"
                    },
                    {
                      "text": "Popup Title: LambdaTest (@lambdatesting) / X\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-03-29T00:07:55.190Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\test-results\\tabs-Two-Popups-chrome-latest-Windows-11-lambdatest\\test-failed-1.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\test-results\\tabs-Two-Popups-chrome-latest-Windows-11-lambdatest\\test-failed-2.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\test-results\\tabs-Two-Popups-chrome-latest-Windows-11-lambdatest\\test-failed-3.png"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\test-results\\tabs-Two-Popups-chrome-latest-Windows-11-lambdatest\\test-failed-4.png"
                    },
                    {
                      "name": "_prompt-0",
                      "contentType": "text/markdown",
                      "body": ""
                    }
                  ],
                  "errorLocation": {
                    "file": "C:\\Users\\susan\\playwright\\PlaywrightPractise\\tests\\lambda\\tabs.test.ts",
                    "column": 114,
                    "line": 75
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "90092c161e9e092ba181-462a7234b13267c35c33",
          "file": "tabs.test.ts",
          "line": 44,
          "column": 6
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-03-29T00:07:53.278Z",
    "duration": 38997.503000000004,
    "expected": 0,
    "skipped": 0,
    "unexpected": 1,
    "flaky": 0
  }
}